             ΕΘΝΙΚΟ ΜΕΤΣΟΒΙΟ ΠΟΛΥΤΕΧΝΕΙΟ
ΣΧΟΛΗ ΗΛΕΚΤΡΟΛΟΓΩΝ ΜΗΧΑΝΙΚΩΝ ΚΑΙ ΜΗΧΑΝΙΚΩΝ ΥΠΟΛΟΓΙΣΤΩΝ


                Δίκτυα Επικοινωνιών
                    Αναφορά 4ης ΄Ασκησης
            6ο εξάμηνο, Ακαδημαϊκή περίοδος 2011-2012

                     Ζωή Παρασκευοπούλου
                        Α.Μ. 03108152




                               1
     3. Σενάριο Προσομοίωσης
     3.1
     Με το κατάλληλο tcl script δημιουργούμε το αντικείμενο της προσομοίωσης και καθορίζουμε το αρχείο
     ίχνους.
 1   # Create a s i m u l a t o r o b j e c t
 2   set ns [ new S i m u l a t o r ]
 3     S e t t h e nam trace f i l e
 4   set n f [ open lab4.nam w]
 5   $ns namtrace−all $ n f
 6   # Set the trace f i l e
 7   set t r f [ open l a b 4 . t r w]
 8   $ns t r a c e − a l l $ t r f
 9   # Define a ’ f i n i s h ’ procedure
10   proc f i n i s h {} {
11                global ns n f t r f
12   }
13   $ns f l u s h − t r a c e
14   # Close the trace f i l e
15   close $nf
16   close $ t r f
17   exit 0


     3.2
     Στη συνέχεια καθορίζουμε την τοπολογία της άσκησης. Συγκεκριμένα έχουμε 4 κόμβους σε τοπολογία
     δακτυλίου, συνδεόμενους ανα δύο με αμφίδρομες ζεύξεις χωρητικότητας 2 M b, καθυστέρησης 50 ms και
     ουράς Droptail .




     3.3
     Δημιουργούμε στη συνέχεια δύο συνδέσεις tcp μια απο τον κόμβο 0 στον κόμβο 3 κάνοντας χρήση
     πρωτοκόλλου Go back N (μήκος παραθύρου 7) και μια απο τον κόμβο 1 στον κόμβο 2 κάνοντας χρήση
     πρωτοκόλλου Stop and Wait (μήκος παραθύρου 1).

                                                      2
   3.4
   Τέλος ορίζουμε τα γεγονότα: τη χρονική στιγμή 0.5 s, οι δύο FTP agents αρχίζουν ταυτόχρονα την
   αποστολή 50 πακέτων, ενώ η χρονική στιγμή 10 s η προσομοίωση ολοκληρώνεται.


   4. Ανάλυση αποτελεσμάτων με τη βοήθεια του ΝΑΜ
   • Με τη βοήθεια του animation παρατηρούμε ότι το τελευταίο πακέτο που στέλνει ο κόμβος 0 στον 3
   (Go back N ) παραλαμβάνεται την χρονική στιγμή 1.3 s. Αντίστοιχα το τελευταίο πακέτο που στέλνει ο
   κόμβος 1(Stop and Wait ) παραλαμβάνεται απο τον 2 τη χρονική στιγμη 5.66 s.
   • Δεδομένης της χωρητικότητας τον ζεύξεων υπολογίζουμε το μέγιστο αριθμό πακέτων που μπορούν να
   είναι πάνω στη ζεύξη κάθε χρονική στιγμή, χωρίς να υπάρξει απώλεια:

                                               2M b
                                                        bits
                                                             ≈ 240 πακέτα.
                                          1040bytes ∗ 8 byte

   Συμπεραίνουμε λοιπόν ότι και τα 50 πακέτα μπορούν να σταλούν σε ένα μόνο παράθυρο αν το μέγεθος
   παραθύρου είναι μεγαλύτερο ή ίσο με 50. ΄Ετσι το ελάχιστο μέγεθος παραθύρου που εξασφαλίζει τον
   μικρότερο χρόνο μετάδοσης είναι 50.
   • Θέτουμε για την σύνδεση μεταξύ των κόμβων 0-3 μήκος παραθύρου 50:
1 $ tc p 0 set window 50
2 $ tc p 0 set w i n d o w I n i t   50

   Στην περίπτωση αυτή το τελευταίο πακέτο που στέλνεται απο τον κόμβο 0 λαμβάνεται απο τον κόμβο 3 τη
   χρονική στιγμή 0.75 s.
   • Στη συνέχεια με μήκος παραθύρου 50 για την σύνδεση tcp0 δεκαπλασιάζουμε την καθυστέρηση της
   ζεύξης 0-3 αλλάζοντας την από 50 ms σε 500 ms. Σε αυτή την περίπτωση η λήψη των πακέτων
   ολοκληρώνεται τη χρονική στιγμή 1.2 s δηλαδή περίπου 450 ms πιο μετά απο τη λήψη με την αρχική
   καθυστέρηση της ζεύξης. Αυτό είναι αναμενόμενο αφού η μεταβολή της καθυστέρησης είναι 450 ms.


   5. Ανάλυση αποτελεσμάτων με τη βοήθεια του αρχείου
   ίχνους
   • Απο την έξοδο του προγράμματος awk βλέπουμε ότι για κάθε ροή κίνησης παραλαμβάνονται 50 πακέτα ή
   51960 Bytes.




   • Απο το αρχείο ίχνους επιβεβαιώνουμε ότι η μετάδοση για τη ροή 0 (μήκος παραθύρου 7) σταματα τη
   χρονική στιγμή 1.3 s και για τη ροή 1 (μήκος παραθύρου 1) τη χρονική στιγμή 5.66 s.
   Για τη ροή tcp0 έχουμε:
                                      bits
                      51960Bytes ∗ 8 Bytes
   Ρυθμός μετάδοσης:                       = 519600bps
                            1.3s − 5s

                                                         3
               519600bps
Χρησιμοποίηση:            = 0.26
               2000000bps
Για τη ροή tcp1 έχουμε:
                                   bits
                   51960Bytes ∗ 8 Bytes
Ρυθμός μετάδοσης:                       = 80558bps
                       5.66s − 5s
               519600bps
Χρησιμοποίηση:            = 0.04
               2000000bps




                                                4
